(()=>{var d=class extends HTMLElement{#t;#s;#u="ArrowLeft";#m="ArrowRight";#e=0;#g=!0;#l=200;#o=!1;#b=0;#a=0;#h=0;#d;#i;#n;#r;static get observedAttributes(){return["index","drag-threshold","loop","drag","key-back","key-forth"]}constructor(){super();let e=String.raw,t=this.attachShadow({mode:"open"}),s=document.createElement("template");s.innerHTML=e`
      <style>
        #root {
          width: 100%;
          height: 100%;
          overflow: hidden;
          display: flex;
          flex-flow: row wrap;
        }
        #root img {
          user-drag: none;
          -webkit-user-drag: none;
          user-select: none;
          -moz-user-select: none;
          -webkit-user-select: none;
          -ms-user-select: none;
        }
        slot {
          display: none;
        }
        #container {
          width: 100%;
          height: 80%;
          overflow: hidden;
        }
        #elements {
          width: 100%;
          height: 100%;
          display: flex;
          flex-flow: row nowrap;
          align-items: center;
        }
        #elements > * {
          opacity: 100%;
          object-fit: contain;
          flex: 0 0 100%;
          width: 100%;
          height: 100%;
          user-select: none;
          user-drag: none;
          -webkit-user-drag: none;
          user-select: none;
          -moz-user-select: none;
          -webkit-user-select: none;
          -ms-user-select: none;
        }
        #thumbnails-container {
          width: 100%;
          height: calc(20% - 0.5rem);
          padding-top: 0.5rem;
          overflow: hidden;
          overflow-x: scroll;
        }
        #thumbnails {
          display: flex;
          flex-flow: row nowrap;
          height: 100%;
          width: 100%;
          min-width: max-content;
          gap: 0.5rem;
          user-select: none;
          justify-content: center;
        }
        #thumbnails > * {
          object-fit: cover;
          height: 100%;
          user-select: none;
          box-sizing: border-box;
          max-height: 100%;
        }
        .elements-transition {
          transition: transform ease 0.6s;
        }
        .draggable {
          cursor: move; /* Fallback if grab cursor is unsupported */
          cursor: grab;
          cursor: -moz-grab;
          cursor: -webkit-grab;
        }
        .dragged {
          cursor: grabbing;
          cursor: -moz-grabbing;
          cursor: -webkit-grabbing;
        }
        .thumbnail-selected {
          border: 2px solid black;
        }
        .thumbnail-deselected {
          border: 0px;
        }
      </style>
      <div id="root">
        <slot></slot>
        <slot name="original"></slot>
        <slot name="thumbnail"></slot>
        <div id="container">
          <div id="elements" class="elements-transition"></div>
        </div>
        <div id="thumbnails-container">
          <div id="thumbnails"></div>
        </div>
      </div>
    `,t.append(s.content.cloneNode(!0)),this.#t=t.getElementById("elements"),this.#s=t.getElementById("thumbnails");let i=t.querySelector("slot"),h=t.querySelector('slot[name="thumbnail"]'),r=t.querySelector('slot[name="original"]'),c='Make sure you have at least as many items in slot "original" as in the slot "thumbnail", or that slot "thumbnail" is empty.';r.addEventListener("slotchange",()=>{i.assignedNodes().forEach(n=>{if(!(n.nodeType===Node.TEXT_NODE||n.nodeType===Node.COMMENT_NODE)){if(n.nodeName==="STYLE"){t.append(n);return}console.warn("unsupported node in default slot: ",n,"only <style> is supported")}});let l=r.assignedNodes().filter(n=>n.nodeType===Node.ELEMENT_NODE),o=h.assignedNodes().filter(n=>n.nodeType===Node.ELEMENT_NODE);o.length>0&&o.length>l.length&&(console.warn(`Falling back to using items from slot "original" as thumbnails because slot "thumbnail" has ${o.length} item(s) while slot "original" has only ${l.length} item(s). `+c),o=l),this.#t.innerHTML="",this.#s.innerHTML="",l.forEach((n,a)=>{let g=n.cloneNode(!0);this.#t.appendChild(g);let u=n;o.length>0&&(a>=o.length?console.warn(`Item from slot "original" is missing a counterpart from the slot "thumbnail" at index ${a}. `+c):u=o[a]);let m=u.cloneNode(!0);m.addEventListener("click",()=>{this.goTo(a)}),this.#s.appendChild(m)}),this.attributeChangedCallback("index",null,this.getAttribute("index")),this.goTo(this.#e,{instant:!0,thumbnailsScrollBehavior:"instant"})}),this.#d=this.#E.bind(this),this.#i=this.#w.bind(this),this.#n=this.#y.bind(this),this.#r=this.#L.bind(this)}connectedCallback(){window.addEventListener("keydown",this.#d)}disconnectedCallback(){this.#t.innerHTML="",this.#s.innerHTML="",window.removeEventListener("keydown",this.#d),this.#t.removeEventListener("mousedown",this.#i),this.#t.removeEventListener("touchstart",this.#i),document.removeEventListener("mouseup",this.#n),document.removeEventListener("touchend",this.#n),document.removeEventListener("mousemove",this.#r),document.removeEventListener("touchmove",this.#r)}attributeChangedCallback(e,t,s){switch(e){case"index":{let i=parseInt(s);isNaN(i)||(this.#e=i>=0&&i<this.length?i:0);break}case"loop":{this.#g=s!=="false";break}case"drag":{this.getAttribute("drag")==="false"&&this.#o?(this.#o=!1,this.#t.removeEventListener("mousedown",this.#i),this.#t.removeEventListener("touchstart",this.#i),this.#t.classList.remove("draggable")):this.#o||(this.#o=!0,this.#t.addEventListener("mousedown",this.#i),this.#t.addEventListener("touchstart",this.#i,{passive:!0}),this.#t.classList.add("draggable"));break}case"drag-threshold":{let i=parseInt(s);isNaN(i)||(this.#l=i<0?0:i);break}case"key-back":{this.#u=s==="false"?null:s;break}case"key-forth":{this.#m=s==="false"?null:s;break}}}get length(){return this.#t.children.length}moveBy(e,t){e=parseInt(e),!(e>=0&&e>=this.length)&&(e<0&&-e>=this.length||!this.#g&&(this.#e+e<0||this.#e+e>=this.length)||(this.#e+=e,this.#e>=this.length?this.#e-=this.length:this.#e<0&&(this.#e=this.length+this.#e),this.goTo(this.#e,t)))}goTo(e,t){if(e=parseInt(e),e<0||e>=this.length)return;this.#e=e;let s=-(this.#e*100);this.#t.style.transform=`translateX(${s}%)`,t&&t.instant===!0&&(this.#f(),setTimeout(()=>{this.#v()}));for(let h=0;h<this.#s.children.length;h++){let r=this.#s.children[h];h==this.#e?(r.classList.add("thumbnail-selected"),r.classList.remove("thumbnail-deselected")):(r.classList.remove("thumbnail-selected"),r.classList.add("thumbnail-deselected"))}let i=t&&t.thumbnailsScrollBehavior?t.thumbnailsScrollBehavior:"smooth";this.#k(i)}#E(e){e.key===this.#u?this.moveBy(-1):e.key===this.#m&&this.moveBy(1)}#f(){this.#t.classList.remove("elements-transition")}#v(){this.#t.classList.add("elements-transition")}#p(){let e=window.getComputedStyle(this.#t);return new DOMMatrix(e.transform).m41}#c(e){return e.touches&&e.touches.length>0?this.#h=e.touches[0].clientX:e.clientX!=null&&(this.#h=e.clientX),this.#h}#w(e){e.button===0&&(document.addEventListener("mouseup",this.#n),document.addEventListener("touchend",this.#n),document.addEventListener("mousemove",this.#r),document.addEventListener("touchmove",this.#r),this.#t.classList.add("dragged"),this.#b=this.#p(),this.#a=this.#c(e),this.#h=0,this.#f())}#y(e){this.#t.classList.remove("dragged"),document.removeEventListener("mouseup",this.#n),document.removeEventListener("touchend",this.#n),document.removeEventListener("mousemove",this.#r),document.removeEventListener("touchmove",this.#r),this.#v();let t=this.#c(e);if(t==0)return;let s=this.#a-t;if(s!=0){if(s<0&&-s>this.#l){if(this.#e<1){this.goTo(this.#e);return}this.moveBy(-1);return}if(s>this.#l){if(this.#e+1>=this.length){this.goTo(this.#e);return}this.moveBy(1);return}this.goTo(this.#e)}}#L(e){let t=this.#a-this.#c(e),s=-this.#b+t;this.#e+1>=this.length&&t>0||(this.#t.style.transform=`translateX(-${s}px)`)}#k(e){let t=this.#s.children[this.#e];t&&t.scrollIntoView({behavior:e,inline:"center",block:"nearest"})}};customElements.define("component-carousel",d);})();
